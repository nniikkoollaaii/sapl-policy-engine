	<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright Â© 2020 Dominic Heutelbeck (dominic@heutelbeck.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>io.sapl</groupId>
		<artifactId>sapl-policy-engine</artifactId>
		<version>2.0.0-SNAPSHOT</version>
	</parent>
	<artifactId>sapl-testrunner</artifactId>

	<packaging>jar</packaging>

	<name>SAPL Testrunner JUnit</name>

	<dependencies>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>sapl-lang</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>sapl-pdp-embedded</artifactId>
			<version>${project.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-simple</artifactId>
		    <scope>test</scope>
		</dependency>		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>compile</scope>
			<!-- <scope>test</scope> -->
		</dependency>
		
		<dependency>
		    <groupId>org.aspectj</groupId>
		    <artifactId>aspectjrt</artifactId>
		    <version>1.9.5</version>
		</dependency>
		
		<!-- Testing -->
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<build>
		<sourceDirectory>${project.build.directory}/generated-sources/delombok</sourceDirectory>
		<plugins>
			<plugin>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-maven-plugin</artifactId>
    			<version>1.18.16.0</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>delombok</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <addOutputDirectory>false</addOutputDirectory>
                    <sourceDirectory>src/main/java</sourceDirectory>
                </configuration>
            </plugin>
			<plugin>
				<!-- use original source org.codehaus.mojo when supporting java 11, till then -->
				<!-- https://github.com/mojohaus/aspectj-maven-plugin/issues/24#issuecomment-419077658 -->
			    <!-- <groupId>org.codehaus.mojo</groupId> -->    
			  	<groupId>com.nickwongdev</groupId>
			  	<artifactId>aspectj-maven-plugin</artifactId>
			  	<version>1.12.6</version>

			    <configuration>
					<complianceLevel>${java.version}</complianceLevel>
					<source>1.8</source>
					<target>1.8</target>
					<showWeaveInfo>true</showWeaveInfo>
					<verbose>true</verbose>
					<Xlint>ignore</Xlint>
					<encoding>UTF-8 </encoding>
					<weaveDependencies>
					    <weaveDependency>  
					        <groupId>${project.groupId}</groupId>
					        <artifactId>sapl-lang</artifactId>
					    </weaveDependency>
					</weaveDependencies>
			    </configuration>
			    <executions>
			    <!-- do NOT fix with surounding <pluginManagement> as it only configures but not applies the plugin -->
			        <execution>
			        	<!-- 
			        	<configuration>
		       				<weaveMainSourceFolder>true</weaveMainSourceFolder>
			        	</configuration>
			        	 -->
			            <goals>
			                <!-- use this goal to weave all your main classes -->
			                <goal>compile</goal>
			                <!-- use this goal to weave all your test classes -->
			                <goal>test-compile</goal>
			            </goals>
			        </execution>
			    </executions>
			</plugin>
		</plugins>
	</build>
	
</project>
